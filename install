#!/bin/bash

# This script is shamelessly adapted from https://github.com/saalfeldlab/n5-utils, thanks @axtimwalde & co!

VERSION="0.1.0-SNAPSHOT"
INSTALL_DIR=${1:-$(pwd)}

echo ""
echo "Installing into $INSTALL_DIR"

# check for operating system
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  echo "Assuming on Linux operating system"
  MEM=$(cat /proc/meminfo | grep MemTotal | sed s/^MemTotal:\\\s*\\\|\\\s\\+[^\\\s]*$//g)
  MEMGB=$(($MEM/1024/1024))
  MEM=$((($MEMGB/5)*4))
elif [[ "$OSTYPE" == "darwin"* ]]; then
  echo "Assuming on MacOS X operating system"
  # sysctl returns total hardware memory size in bytes
  MEM=$(sysctl hw.memsize | grep hw.memsize | sed s/hw.memsize://g)
  MEMGB=$(($MEM/1024/1024/1024))
  MEM=$((($MEMGB/5)*4))
else
  echo "ERROR - Operating system (arg2) must be either linux or osx - EXITING (on windows please run as a normal Java class from e.g. Eclipse)"
  exit
fi

echo "Available memory:" $MEMGB "GB, setting Java memory limit to" $MEM "GB"

mvn clean install
mvn -Dmdep.outputFile=cp.txt -Dmdep.includeScope=runtime dependency:build-classpath

echo ""

# function that installs one command
# $1 - command name
# $2 - java class containing the functionality
install_command () {
	echo "Installing '$1' command into" $INSTALL_DIR

	echo '#!/bin/bash' > $1
	echo '' >> $1
	echo "JAR=\$HOME/.m2/repository/net/preibisch/imglib2-st/${VERSION}/imglib2-st-${VERSION}.jar" >> $1
	echo 'java \' >> $1
	echo "  -Xmx${MEM}g \\" >> $1
	echo '  -XX:+UseConcMarkSweepGC \' >> $1
	echo -n '  -cp $JAR:' >> $1
	echo -n $(cat cp.txt) >> $1
	echo ' \' >> $1
	echo '  '$2' "$@"' >> $1

	chmod a+x $1
}


install_command st-explorer "cmd.View"
install_command st-render "cmd.RenderImage"
install_command st-bdv-view "cmd.DisplayStackedSlides"
install_command st-resave "cmd.Resave"
install_command st-add-slice "cmd.AddDataset"
install_command st-normalize "cmd.Normalize"
install_command st-add-annotations "cmd.AddAnnotations"
install_command st-align-pairs "cmd.PairwiseSectionAligner"
install_command st-align-pairs-view "cmd.ViewPairwiseAlignment"
install_command st-align-global "cmd.GlobalOpt"

if [ $(pwd) == "$INSTALL_DIR" ]; then
    echo "Installation directory equals current directory, we are done."
else
	echo "Creating directory $INSTALL_DIR and moving files..."
    mkdir -p $INSTALL_DIR
    mv st-explorer $INSTALL_DIR/
    mv st-bdv-view $INSTALL_DIR/
    mv st-render $INSTALL_DIR/
    mv st-resave $INSTALL_DIR/
    mv st-add-slice $INSTALL_DIR/
    mv st-normalize $INSTALL_DIR/
    mv st-add-annotations $INSTALL_DIR/
    mv st-align-pairs $INSTALL_DIR/
    mv st-align-pairs-view $INSTALL_DIR/
    mv st-align-global $INSTALL_DIR/
fi

rm cp.txt

echo "Installation finished."
